name: React JS Workflow
on: [push, workflow_dispatch]
jobs:
  Run-lint-on-APP:
    name: Run Lint on APP
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Installing Node 
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache Dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.npm
          key: deps-node-module-${{ hashFiles('**/package-lock.json') }}
      - name: Installing dependencies
        run: npm ci
      - name: Test Lint
        run: npm run lint

  Run-Test-on-APP:
    name: Run Test on APP
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Installing Node 
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache Dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.npm
          key: deps-node-module-${{ hashFiles('**/package-lock.json') }}
      - name: Installing dependencies
        run: npm ci
      - name: Test Code
        id: run-test
        run: npm run test
      - name: upload Test File
        if: failure() && steps.run-test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json

  Building-APP:
    name: Building the Code
    needs: Run-Test-on-APP
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Installing Node 
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache Dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.npm
          key: deps-node-module-${{ hashFiles('**/package-lock.json') }}
      - name: Installing dependencies
        run: npm ci
      - name: Building Code
        run: npm run build
      - name: Publish Js filename
        id: publish
        run:  find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: dist
  Deploy-APP:
    name: Deploy the Code
    needs: Building-APP
    runs-on: ubuntu-latest
    steps:
      - name: Downloading Artifats
        uses: actions/download-artifact@v4
        with:
          name: my-artifact
      - name: Output of Deploying Code...
        run: ls
      - name: Output JS filename
        run:  echo "${{ needs.Building-APP.outputs.script-file }}"